{"ast":null,"code":"var _jsxFileName = \"/Users/shizhengyan/cs5610/web-dev/src/components/Labs/redux-examples/todos-component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todos = () => {\n  _s();\n\n  const todos = useSelector(state => state.todos);\n  const [todo, setTodo] = useState({\n    do: ''\n  });\n  const dispatch = useDispatch();\n\n  const updateTodoClickHandler = todo => {\n    const action = {\n      type: 'update-todo',\n      todo\n    };\n    dispatch(action);\n  };\n\n  const todoChangeHandler = event => {\n    const doValue = event.target.value;\n    const newTodo = {\n      do: doValue\n    };\n    setTodo(newTodo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [\"input checked=\", todo.done, \"onChange=\", event => updateTodoClickHandler({ ...todo,\n          done: event.target.checked\n        }), \"type=\\\"checkbox\\\"/>\", todo.do, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodoClickHandler(todo),\n          className: \"btn btn-danger float-end\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Todos, \"8xhxctFB1LegHsH3HeILH2CMDHI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/shizhengyan/cs5610/web-dev/src/components/Labs/redux-examples/todos-component.js"],"names":["React","useState","useDispatch","useSelector","Todos","todos","state","todo","setTodo","do","dispatch","updateTodoClickHandler","action","type","todoChangeHandler","event","doValue","target","value","newTodo","map","done","checked","deleteTodoClickHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,KAAK,GACLF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACD,KAAhB,CADjB;AAEA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAACQ,IAAAA,EAAE,EAAE;AAAL,GAAD,CAAhC;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,QAAMS,sBAAsB,GAAIJ,IAAD,IAAU;AACrC,UAAMK,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAE,aADK;AAEXN,MAAAA;AAFW,KAAf;AAIAG,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACH,GAND;;AASA,QAAME,iBAAiB,GAAIC,KAAD,IAAW;AACjC,UAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA7B;AACA,UAAMC,OAAO,GAAG;AACZV,MAAAA,EAAE,EAAEO;AADQ,KAAhB;AAGAR,IAAAA,OAAO,CAACW,OAAD,CAAP;AACH,GAND;;AAQA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAEQd,KAAK,CAACe,GAAN,CAAUb,IAAI,iBACV;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,qCACmBA,IAAI,CAACc,IADxB,eAEeN,KAAD,IACVJ,sBAAsB,CAClB,EAAC,GAAGJ,IAAJ;AACIc,UAAAA,IAAI,EAAEN,KAAK,CAACE,MAAN,CAAaK;AADvB,SADkB,CAH1B,yBAOKf,IAAI,CAACE,EAPV,eAQI;AAAQ,UAAA,OAAO,EAAE,MACbc,sBAAsB,CAAChB,IAAD,CAD1B;AAEQ,UAAA,SAAS,EAAC,0BAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAuBH,CA7CD;;GAAMH,K;UAEID,W,EAEWD,W;;;KAJfE,K;AA8CN,eAAeA,KAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Todos = () => {\n    const todos\n        = useSelector(state => state.todos);\n    const [todo, setTodo] = useState({do: ''});\n    const dispatch = useDispatch();\n    const updateTodoClickHandler = (todo) => {\n        const action = {\n            type: 'update-todo',\n            todo\n        };\n        dispatch(action);\n    }\n\n\n    const todoChangeHandler = (event) => {\n        const doValue = event.target.value;\n        const newTodo = {\n            do: doValue\n        };\n        setTodo(newTodo);\n    }\n\n    return(\n        <>\n            <h3>Todos</h3>\n            <ul className=\"list-group\">\n                {\n                    todos.map(todo =>\n                        <li className=\"list-group-item\">\n                            input checked={todo.done}\n                            onChange={(event) =>\n                            updateTodoClickHandler(\n                                {...todo,\n                                    done: event.target.checked})}\n                            type=\"checkbox\"/>\n                            {todo.do}\n                            <button onClick={() =>\n                                deleteTodoClickHandler(todo)}\n                                    className=\"btn btn-danger float-end\">\n                                Delete\n                            </button>\n                        </li> ) }\n            </ul>\n        </>\n    );\n};\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}