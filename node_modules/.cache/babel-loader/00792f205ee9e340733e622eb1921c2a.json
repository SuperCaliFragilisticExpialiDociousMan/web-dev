{"ast":null,"code":"var _jsxFileName = \"/Users/shizhengyan/cs5610/web-dev-2/web-dev/src/components/Labs/redux-examples/todos-component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todos = () => {\n  _s();\n\n  const todos = useSelector(state => state.todos);\n  const [todo, setTodo] = useState({\n    do: ''\n  });\n  const dispatch = useDispatch();\n\n  const updateTodoClickHandler = todo => {\n    const action = {\n      type: 'update-todo',\n      todo\n    };\n    dispatch(action);\n  };\n\n  const deleteTodoClickHandler = todo => {\n    const action = {\n      type: 'delete-todo',\n      todo\n    };\n    dispatch(action);\n  };\n\n  const createTodoClickHandler = () => {\n    const action = {\n      type: 'create-todo',\n      todo\n    };\n    dispatch(action);\n  };\n\n  const todoChangeHandler = event => {\n    const doValue = event.target.value;\n    const newTodo = {\n      do: doValue\n    };\n    setTodo(newTodo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: todoChangeHandler,\n          value: todo.do,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createTodoClickHandler,\n          className: \"btn btn-primary\",\n          children: \"Create New Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [todo.do, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodoClickHandler(todo),\n          className: \"btn btn-danger float-end\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          checked: todo.done,\n          onChange: event => updateTodoClickHandler({ ...todo,\n            done: event.target.checked\n          }),\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), todo.do]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Todos, \"8xhxctFB1LegHsH3HeILH2CMDHI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/shizhengyan/cs5610/web-dev-2/web-dev/src/components/Labs/redux-examples/todos-component.js"],"names":["React","useState","useDispatch","useSelector","Todos","todos","state","todo","setTodo","do","dispatch","updateTodoClickHandler","action","type","deleteTodoClickHandler","createTodoClickHandler","todoChangeHandler","event","doValue","target","value","newTodo","map","done","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,KAAK,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAACQ,IAAAA,EAAE,EAAE;AAAL,GAAD,CAAhC;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,QAAMS,sBAAsB,GAAIJ,IAAD,IAAU;AACrC,UAAMK,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAE,aADK;AAEXN,MAAAA;AAFW,KAAf;AAIAG,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACH,GAND;;AAOA,QAAME,sBAAsB,GAAIP,IAAD,IAAU;AACrC,UAAMK,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAE,aADK;AAEXN,MAAAA;AAFW,KAAf;AAIAG,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACH,GAND;;AAOA,QAAMG,sBAAsB,GAAG,MAAM;AACjC,UAAMH,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAE,aADK;AAEXN,MAAAA;AAFW,KAAf;AAIAG,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACH,GAND;;AAOA,QAAMI,iBAAiB,GAAIC,KAAD,IAAW;AACjC,UAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA7B;AACA,UAAMC,OAAO,GAAG;AACZZ,MAAAA,EAAE,EAAES;AADQ,KAAhB;AAGAV,IAAAA,OAAO,CAACa,OAAD,CAAP;AACH,GAND;;AAQA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,gCACI;AACA,UAAA,QAAQ,EAAEL,iBADV;AAEA,UAAA,KAAK,EAAET,IAAI,CAACE,EAFZ;AAGA,UAAA,SAAS,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAQ,UAAA,OAAO,EAAEM,sBAAjB;AACQ,UAAA,SAAS,EAAC,iBADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,mBACKR,IAAI,CAACE,EADV,eAEI;AAAQ,UAAA,OAAO,EAAE,MACbK,sBAAsB,CAACP,IAAD,CAD1B;AAEQ,UAAA,SAAS,EAAC,0BAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,EAoBQF,KAAK,CAACiB,GAAN,CAAUf,IAAI,iBACV;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,gCACI;AAAO,UAAA,OAAO,EAAEA,IAAI,CAACgB,IAArB;AACO,UAAA,QAAQ,EAAGN,KAAD,IACNN,sBAAsB,CAClB,EAAC,GAAGJ,IAAJ;AACIgB,YAAAA,IAAI,EAAEN,KAAK,CAACE,MAAN,CAAaK;AADvB,WADkB,CAFjC;AAKO,UAAA,IAAI,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAOKjB,IAAI,CAACE,EAPV;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CApBR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAuCH,CAxED;;GAAML,K;UACYD,W,EAEGD,W;;;KAHfE,K;AAyEN,eAAeA,KAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Todos = () => {\n    const todos = useSelector(state => state.todos);\n    const [todo, setTodo] = useState({do: ''});\n    const dispatch = useDispatch();\n    const updateTodoClickHandler = (todo) => {\n        const action = {\n            type: 'update-todo',\n            todo\n        };\n        dispatch(action);\n    }\n    const deleteTodoClickHandler = (todo) => {\n        const action = {\n            type: 'delete-todo',\n            todo\n        };\n        dispatch(action);\n    }\n    const createTodoClickHandler = () => {\n        const action = {\n            type: 'create-todo',\n            todo\n        };\n        dispatch(action);\n    }\n    const todoChangeHandler = (event) => {\n        const doValue = event.target.value;\n        const newTodo = {\n            do: doValue\n        };\n        setTodo(newTodo);\n    }\n\n    return(\n        <>\n            <h3>Todos</h3>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item\">\n                    <input\n                    onChange={todoChangeHandler}\n                    value={todo.do}\n                    className=\"form-control\"/>\n                    <button onClick={createTodoClickHandler}\n                            className=\"btn btn-primary\">\n                        Create New Todo\n                    </button>\n                </li>\n                <li className=\"list-group-item\">\n                    {todo.do}\n                    <button onClick={() =>\n                        deleteTodoClickHandler(todo)}\n                            className=\"btn btn-danger float-end\">\n                        Delete\n                    </button>\n                </li>\n                {\n                    todos.map(todo =>\n                        <li className=\"list-group-item\">\n                            <input checked={todo.done}\n                                   onChange={(event) =>\n                                       updateTodoClickHandler(\n                                           {...todo,\n                                               done: event.target.checked})}\n                                   type=\"checkbox\"/>\n                            {todo.do}\n                        </li>)\n                }\n\n\n            </ul>\n        </>\n    );\n};\nexport default Todos;"]},"metadata":{},"sourceType":"module"}